Index: nmake.opt
===================================================================
--- nmake.opt	(revision 17313)
+++ nmake.opt	(working copy)
@@ -100,6 +100,7 @@
 #GEOTIFF_LIB =   C:/warmerda/libgeotiff/geotiff_i.lib
 
 # Uncomment the following and update to enable ECW support.
+#ECW_PLUGIN = NO
 #ECWDIR  = 	C:\warmerda\libecwj2-3.3
 #ECWLIB  = 	$(ECWDIR)\Source\NCSBuildQmake\Debug\libecwj2.lib
 
Index: frmts/makefile.vc
===================================================================
--- frmts/makefile.vc	(revision 17313)
+++ frmts/makefile.vc	(working copy)
@@ -39,8 +39,10 @@
 !ENDIF
 
 !IFDEF ECWDIR
+!IF "$(ECW_PLUGIN)" != "YES"
 EXTRAFLAGS	=	$(EXTRAFLAGS) -DFRMT_ecw
 !ENDIF
+!ENDIF
 
 !IFDEF HDF4_DIR
 EXTRAFLAGS	=	$(EXTRAFLAGS) -DFRMT_hdf4
Index: frmts/ecw/makefile.vc
===================================================================
--- frmts/ecw/makefile.vc	(revision 17313)
+++ frmts/ecw/makefile.vc	(working copy)
@@ -5,6 +5,8 @@
 
 OBJ	=	ecwdataset.obj ecwcreatecopy.obj jp2userbox.obj
 
+PLUGIN_DLL =	gdal_ECW_JP2ECW.dll
+
 GDAL_ROOT	=	..\..
 
 !INCLUDE $(GDAL_ROOT)\nmake.opt
@@ -17,6 +19,7 @@
 clean:
 	-del *.obj
 	-del *.exe
+	-del gdal_ECW.*
 
 testecw.exe:	testecw.cpp
 	$(CC) /Zi /MD $(EXTRAFLAGS) testecw.cpp $(ECWLIB)
@@ -24,4 +27,9 @@
 ecw_example1.exe:	ecw_example1.c
 	$(CC) /MD $(EXTRAFLAGS) ecw_example1.c $(ECWLIB)
 	
+plugin:	$(PLUGIN_DLL)
 
+$(PLUGIN_DLL): $(OBJ)
+	link /dll /out:$(PLUGIN_DLL) $(OBJ) \
+		$(GDALLIB) $(ECWLIB)
+	if exist $(PLUGIN_DLL).manifest mt -manifest $(PLUGIN_DLL).manifest -outputresource:$(PLUGIN_DLL);2
Index: frmts/ecw/ecwdataset.cpp
===================================================================
--- frmts/ecw/ecwdataset.cpp	(revision 17313)
+++ frmts/ecw/ecwdataset.cpp	(working copy)
@@ -1581,6 +1581,20 @@
 }
 
 /************************************************************************/
+/*                      GDALRegister_ECW_JP2ECW()                       */
+/*                                                                      */
+/*      This function exists so that when built as a plugin, there      */
+/*      is a function that will register both drivers.                  */
+/************************************************************************/
+
+void GDALRegister_ECW_JP2ECW()
+
+{
+    GDALRegister_ECW();
+    GDALRegister_JP2ECW();
+}
+
+/************************************************************************/
 /*                        GDALRegister_JP2ECW()                         */
 /************************************************************************/
 void GDALRegister_JP2ECW()
Index: gcore/gdal_frmts.h
===================================================================
--- gcore/gdal_frmts.h	(revision 17313)
+++ gcore/gdal_frmts.h	(working copy)
@@ -66,6 +66,7 @@
 void CPL_DLL GDALRegister_FITS(void);
 void CPL_DLL GDALRegister_ECW(void);
 void CPL_DLL GDALRegister_JP2ECW(void);
+void CPL_DLL GDALRegister_ECW_JP2ECW(void);
 void CPL_DLL GDALRegister_FujiBAS(void);
 void CPL_DLL GDALRegister_FIT(void);
 void CPL_DLL GDALRegister_VRT(void);
