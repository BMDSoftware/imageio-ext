/*
 *    ImageI/O-Ext - OpenSource Java Image translation Library
 *    http://www.geo-solutions.it/
 *    http://java.net/projects/imageio-ext/
 *    (C) 2007 - 2011, GeoSolutions
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    either version 3 of the License, or (at your option) any later version.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */

package it.geosolutions.imageio.plugins.turbojpeg;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.ann.CLong;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
/**
 * Wrapper for library <b>turbojpeg</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("turbojpeg") 
@Runtime(CRuntime.class) 
public class TurboJpegLibrary {
    static {
        BridJ.register();
    }

    public static final int TJ_444 = 0;
    public static final int TJ_422 = 1;
    public static final int TJ_420 = 2;
    public static final int TJ_GRAYSCALE = 3;

    // / <i>native declaration : turbojpeg.h</i>
    public static final int TJ_FORCESSE3 = 128;

    // / <i>native declaration : turbojpeg.h</i>
    public static final int TJ_FORCESSE2 = 32;

    // / <i>native declaration : turbojpeg.h</i>
    public static final int TJ_BOTTOMUP = 2;

    // / <i>native declaration : turbojpeg.h</i>
    public static final int TJ_FASTUPSAMPLE = 256;

    // / <i>native declaration : turbojpeg.h</i>
    public static final int TJ_FORCESSE = 16;

    // / <i>native declaration : turbojpeg.h</i>
    public static final int NUMSUBOPT = 4;

    // / <i>native declaration : turbojpeg.h</i>
    public static final int TJ_BGR = 1;

    // / <i>native declaration : turbojpeg.h</i>
    public static final int TJ_YUV = 512;

    // / <i>native declaration : turbojpeg.h</i>
    public static final int TJ_ALPHAFIRST = 64;

    // / <i>native declaration : turbojpeg.h</i>
    public static final int TJ_FORCEMMX = 8;

    public static native Pointer<?> tjInitCompress();

    public static native int tjCompress(Pointer<?> j, Pointer<Byte> srcbuf, int width, int pitch,
            int height, int pixelsize, Pointer<Byte> dstbuf, Pointer<org.bridj.CLong> size,
            int jpegsubsamp, int jpegqual, int flags);

    public static native int tjEncodeYUV(Pointer<?> j, Pointer<Byte> srcbuf, int width, int pitch,
            int height, int pixelsize, Pointer<Byte> dstbuf, int subsamp, int flags);

    public static native Pointer<?> tjInitDecompress();

    public static native int tjDecompressHeader2(Pointer<?> j, Pointer<Byte> srcbuf,
            @CLong long size, Pointer<Integer> width, Pointer<Integer> height,
            Pointer<Integer> jpegsubsamp);

    public static native int tjDecompressHeader(Pointer<?> j, Pointer<Byte> srcbuf,
            @CLong long size, Pointer<Integer> width, Pointer<Integer> height);

    public static native int tjDecompress(Pointer<?> j, Pointer<Byte> srcbuf, @CLong long size,
            Pointer<Byte> dstbuf, int width, int pitch, int height, int pixelsize, int flags);

    public static native int tjDecompressToYUV(Pointer<?> j, Pointer<Byte> srcbuf,
            @CLong long size, Pointer<Byte> dstbuf, int flags);

    public static native int tjDestroy(Pointer<?> h);

    public static native Pointer<Byte> tjGetErrorStr();

    public static native long TJBUFSIZE(int width, int height);
    public static native long TJBUFSIZEYUV(int width, int height, int subsamp);
}
